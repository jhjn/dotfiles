# Basic vars
set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set color256

# cmds/functions
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval mv -iv $fx $dest &&
	notify "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}


# Bindings
map c $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/directories | fzf)"
map <c-f> $lf -remote "send $id select '$(fzf)'"
map J $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/directories | fzf)"
map gd cd ~/Documents
map gp cd ~/Sync/phys/III
map gc cd ~/Sync/comp
map gn cd ~/Nextcloud
map D delete
map C copyto
map M moveto
map a push %mkdir<space>
map r push :rename<space>
map <enter> shell
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f

#play song
map pp shell ffplay %s
